<?php
namespace App\Lib\Connector\DynamoBC;

use App\Lib\Connector\Protocol\NTLMTransporter;
use SigmaConnector;

/*
 * Microsoft Dynamics Business Central API integration class
 * This is a concrete implementation of the Sigma Transport interface
 */

class NavConnector extends NTLMTransporter implements SigmaConnector
{


    /**
     * NavConnector constructor.
     * @param string $connPrefix
     */
    public function __construct($connPrefix)
    {
        $this->connPrefix = $connPrefix;
    }

    public function makeBaseConnection()
    {
        // TODO: Implement makeBaseConnection() method.
    }

    public function getConnectorPrefix()
    {
        // TODO: Implement getConnectorPrefix() method.
    }

    public function getApiDirectory(array $apiRegister = [])
    {
       $this->apiDirectory = $apiRegister;
    }

    public function baseConnection($baseEndpoint, array $connParams = [])
    {
        parent::baseConnection($baseEndpoint, $connParams); // TODO: Change the autogenerated stub
    }

    public function checkConnectionStatus()
    {
        parent::checkConnectionStatus(); // TODO: Change the autogenerated stub
    }

    public function getDocumentEntry()
    {
        parent::getDocumentEntry(); // TODO: Change the autogenerated stub
    }

    public function getFlatEntry()
    {
        parent::getFlatEntry(); // TODO: Change the autogenerated stub
    }

    public function pushDocumentEntry()
    {
        parent::pushDocumentEntry(); // TODO: Change the autogenerated stub
    }

    public function pushFlatEntry()
    {
        parent::pushFlatEntry(); // TODO: Change the autogenerated stub
    }

    public function CodeUnitApis($endpoint, array $data = [], $method = 'post')
    {
        try {
            $companyName = new CompanyInformationApi();
            $endpoint .=  $this->appendData(['company' => $companyName->getName()]);
            $this->entrypoint = rtrim(env('BC_BASE_CU'), '/').'/';
            $res = $this->request($endpoint, $data , $method);
            $this->entrypoint = rtrim(env('BC_BASE_API'), '/').'/';
            return $res;
        }catch (\Exception $exception){
            throw $exception;
        }
    }

    public function packageRequestPath($basePath, $requestUrl, $requestParams = [])
    {
        // TODO: Implement packageRequestPath() method.
    }

    public function rawRequest($endpoint, array $data = [], $method = 'get')
    {
        // TODO: Implement rawRequest() method.
    }

    public function request($endpoint, array $data = [], $method = 'get')
    {
        // TODO: Implement request() method.
    }


    public function retrieveAllApis()
    {
        // TODO: Implement retrieveAllApis() method.
    }
}
